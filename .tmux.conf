unbind C-b
unbind C-y
set-option -g prefix C-q
bind-key b set-option status
bind-key C-q send-prefix
bind \\ split-window -h
bind - split-window -v
bind r source-file ~/.tmux.conf
#set -g status-bg blue
set -g status-bg '#567a9d'
set -g status-fg white
set -g set-clipboard external
set -s escape-time 0
bind 6 resize-pane -t 1 -y 15
bind-key -n C-y resize-pane -Z
## Appearance from https://github.com/dkarter/dotfiles/blob/master/tmux.conf
############################################################################
# color adjustment for status bar - make it less dominant
# formatting and configuration for status text
set -g status-left $tm_session_name
set -g status-left-length 150
set -g status-right-length 150
set -g status-interval 5
set -g status-justify centre
set -g window-status-format "[#I] #W "
set -g window-status-current-format "[#I] #W "

# window title
# prevent auto window renaming once I renamed it
set -g allow-rename off

# set inactive/active window styles
#set -g window-style 'fg=colour247,bg=colour236'
set -g window-style 'fg=colour247,bg=colour239'
set -g window-active-style 'fg=colour250,bg=colour235'

# END APPEARANCE
####################


#######################################################
# MOUSE CONFIG FROM
# https://github.com/sc0ty/config/blob/master/.tmux.conf
######################################################

set -gq mouse on

bind-key -n WheelUpPane \
	if-shell -Ft= "#{?pane_active,0,1}" "select-pane -t=" \; \
	if-shell -Ft= "#{pane_in_mode}" \
		"send-keys -M ; send-keys -M ; send-keys -M" \
		"if-shell -Ft= \"#{mouse_any_flag}\" \
			\"send-keys -M\" \
			\"if-shell -Ft= '#{alternate_on}' \
				'send-keys Up Up Up' \
				'copy-mode -e'\""

bind-key -n WheelDownPane \
	if-shell -Ft= "#{?pane_active,0,1}" "select-pane -t=" \; \
	if-shell -Ft= "#{pane_in_mode}" \
		"send-keys -M ; send-keys -M ; send-keys -M" \
		"if-shell -Ft= \"#{mouse_any_flag}\" \
			\"send-keys -M\" \
			\"if-shell -Ft= '#{alternate_on}' \
				'send-keys Down Down Down'\""

bind-key -n MouseDrag1Pane \
	if-shell -Ft= "#{mouse_any_flag}" \
		"if-shell -Ft= '#{pane_in_mode}' 'copy-mode -eM' 'send-keys -M'" \
		"copy-mode -eM"


# paste with middle click
bind-key -n MouseDown2Pane run "(xsel -o || pbpaste) 2>/dev/null | tmux load-buffer - ; tmux paste-buffer"

# double click to select and copy word in normal mode if mouse is not handled
bind-key -n DoubleClick1Pane \
	if-shell -Ft= "#{mouse_any_flag}" \
		"send-keys -M" \
		"select-pane \; copy-mode -e \; send-keys -X select-word \; send-keys -X copy-pipe '(xsel -ip || pbcopy) 2>/dev/null'"

# tripple click to select and copy line in normal mode if mouse is not handled
bind-key -n TripleClick1Pane \
	if-shell -Ft= "#{mouse_any_flag}" \
		"send-keys -M" \
		"select-pane \; copy-mode -e \; send-keys -X select-line \; send-keys -X copy-pipe '(xsel -ip || pbcopy) 2>/dev/null'"

# drag & drop windows on status line by mouse
bind-key -n MouseDrag1Status swap-window -t=

# new window by right click on status line
bind-key -n MouseDown3Status new-window -a -t= -c '#{pane_current_path}'

# new window in background by middle click on status line
bind-key -n MouseDown2Status new-window -ad -t= -c '#{pane_current_path}'

# don't scroll to bottom after mouse select
# wrokaround for selection being unselected on DragEnd
#bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-selection
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "(xsel -ip || pbcopy) 2>/dev/null"

# deselect with mouse click
bind-key -T copy-mode-vi MouseDown1Pane select-pane \; send-keys -X clear-selection

# exit from copy-mode with right-click
unbind-key -n MouseDown3Pane
bind-key -T copy-mode-vi MouseDown3Pane select-pane \; send-keys -X cancel

# old mouse handling (tmux 2.0 and before)
set -gq mode-mouse on
set -gq mouse-resize-pane on
set -gq mouse-select-pane on
set -gq mouse-select-window on

############################################
# END MOUSE CONFIG
############################################

# use vim-like keys for splits and windows
bind-key v split-window -h
bind-key s split-window -v
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"
bind C-l send-keys 'C-l'
